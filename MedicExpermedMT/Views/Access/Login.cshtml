@model LoginViewModel
@{
    ViewData["Title"] = "Inicio de sesion";
    Layout = "~/Views/Shared/_Login.cshtml";
}

<link rel="stylesheet" href="~/css/login.css">

<section class="form-02-main">
    <div class="form-03-main">
        <div class="logo">
            <img src="~/images/Logo_azul-removebg-preview.png" alt="Logo">
        </div>
        <form method="post" asp-controller="Access" asp-action="Login" onsubmit="showLoading()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <input asp-for="LoginUsuario" placeholder="Username" class="form-control" />
                <span asp-validation-for="LoginUsuario" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input asp-for="ClaveUsuario" type="password" placeholder="Password" class="form-control" />
                <span asp-validation-for="ClaveUsuario"  class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>

            @if (ViewBag.ErrorMessage != null)
            {
                <p class="text-danger">@ViewBag.ErrorMessage</p>
            }
        </form>
    </div>
</section>

<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner">
        <i class="fa fa-heartbeat"></i>
        <p id="loadingMessage">Loading...</p>
    </div>
</div>



@section Scripts {
  


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var error = '@ViewBag.ErrorMessage';
            if (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error,
                    footer: '<a href="#">Why do I have this issue?</a>'
                });
            }
        });


        // Mostrar mensajes de éxito o error
        var successMessage = '@TempData["SuccessMessage"]';
        var errorMessage = '@TempData["ErrorMessage"]';

        if (successMessage) {
            Swal.fire({
                icon: 'success',
                title: 'Éxito',
                text: successMessage
            });
        }

        if (errorMessage) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorMessage
            });
        }

    </script>

    <script>
        // Lista de frases médicas relacionadas con la salud
        const frasesMedicas = [
            "Cuidando de tu bienestar...",
            "Procesando tus datos de salud...",
            "Estamos aquí para tu bienestar...",
            "Revisando tus signos vitales...",
            "Verificando tu historial médico...",
            "Tu salud es nuestra prioridad...",
            "Cargando información médica...",
            "Conectando con tu equipo de salud...",
            "Analizando resultados médicos...",
            "Monitoreando tu progreso..."
        ];

        let intervalId;

        // Función para seleccionar una frase aleatoria
        function mostrarFraseMedicaAleatoria() {
            const mensajeElemento = document.getElementById("loadingMessage");
            const fraseAleatoria = frasesMedicas[Math.floor(Math.random() * frasesMedicas.length)];
            mensajeElemento.textContent = fraseAleatoria;
        }

        // Función para mostrar el overlay y cambiar las frases cada 3 segundos
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
            mostrarFraseMedicaAleatoria(); // Muestra la primera frase inmediatamente

            // Cambia la frase cada 3 segundos
            intervalId = setInterval(mostrarFraseMedicaAleatoria, 3000);
        }

        // Función para ocultar el overlay y detener la rotación de frases
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
            clearInterval(intervalId); // Detener el cambio de frases
        }


        // Llamar a hideLoading() cuando desees ocultar el overlay
        // Por ejemplo, después de que se complete la carga de datos
        // hideLoading();
    </script>
}
<!-- Ensure you have Font Awesome included -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

